from plumbum import local

import re
import os
import time


def iface_has_ipv4_addr(iface):
  """
    Read the ipv4 address from the ip command
  """
  ip    = local['ip']['-f', 'inet', 'addr', 'show', iface]
  lines = ip().split('\n')
  match = re.search(r'(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})', lines[1])
  
  if not match:
    warn('Can not read ip address from `ip` command. This inidicates a bug!')
    fatal('Please open a issue at github')

  return match.group(1)


def iface_backup_configuration(iface):
  path = '/etc/sysconfig/network/ifcfg-{}'.format(iface)

  if os.path.isfile(path):
    backup = '{}.backup-{}'.format(path, int(time.time()))
    os.rename(path, backup)

def iface_set_static_addr(iface, cfg):
  iface_backup_configuration(iface)

  with open('/etc/sysconfig/network/ifcfg-{}'.format(iface), 'w') as ifcfg:
    ifcfg.write('# Generated by mkcrowbar\n\n')
    ifcfg.write("BOOTPROTO='static'\n")

    for key, setting in cfg.items():
      ifcfg.write("{}='{}'\n".format(key.upper(), setting))


def iface_uses_dhcp(iface):
  """
    Checks if BOOTPROTO='dhcp' is set.
  """
  path = '/etc/sysconfig/network/ifcfg-{}'.format(iface)

  with open(path) as hdl:
    cfg   = hdl.read()
    match = re.search(r'BOOTPROTO=(\'|"|)(dhcp|static)(\'|"|)', cfg)

    if not match:
      warn('Could not check if network uses dhcp')
      return True

    if match.group(2) == 'dhcp':
      return True
  return False


def hostname():
  """
    Get the current hostname
  """
  return local['hostname']().strip()


def set_hostname(new):
  """
    Set the hostname
  """
  hostname = local['hostname'][new]

  if hostname.run(retcode=None)[0] != 0:
    return False
  return True


def is_qualified_hostname(hostname):
  """
    Check if the hostname is fully qualified
  """
  is_domain = re.compile('^[a-zA-Z\d-]{,63}(\.([a-zA-Z\d-]{1,63}))+$')
  if not is_domain.match(hostname):
    return False
  return True
